name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm install

      - name: Get package version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Detected version: $VERSION"

      - name: Create GitHub Release
        uses: actions/github-script@v6
        with:
          script: |
            const version = "${{ steps.get-version.outputs.version }}";
            const tagName = `v${version}`;
            // 기존에 같은 태그의 릴리즈가 있는지 확인
            let releaseExists = false;
            try {
              await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tagName
              });
              console.log(`Release ${tagName} already exists.`);
              releaseExists = true;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }
            if (!releaseExists) {
              await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tagName,
                name: `Release ${tagName}`,
                body: `Release ${tagName}`,
                draft: false,
                prerelease: false
              });
              console.log(`Release ${tagName} created.`);
            }

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
